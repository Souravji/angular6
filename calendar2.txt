template.html
--------------------------------------------

<table width="100%" height="50%!important" >
  <tr><td><div class="headalign"><b>Tenant Onbaording</b></div> </td>
 <td><div class="headalign"><b>Device Onbaording</b></div></td>
 </tr>
 <tr>
   <td>
     <div class="row text-center">
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        mwlCalendarPreviousView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Previous
      </div>
      <div
        class="btn btn-outline-secondary"
        mwlCalendarToday
        [(viewDate)]="viewDate"
      >
        Today
      </div>
      <div
        class="btn btn-primary"
        mwlCalendarNextView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Next
      </div>
    </div>
  </div>
  <div class="col-md-4">
    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>
  </div>
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Month)"
        [class.active]="view === CalendarView.Month"
      >
        Month
      </div>
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Week)"
        [class.active]="view === CalendarView.Week"
      >
        Week
      </div>
    </div>
  </div>
</div>

<div  [ngSwitch]="view" class="calview">
  <mwl-calendar-month-view
    
    *ngSwitchCase="CalendarView.Month"
    [viewDate]="viewDate"
   
    [events]="events"
    [refresh]="refresh"
    [activeDayIsOpen]="activeDayIsOpen"
    (dayClicked)="dayClicked($event.day)"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-month-view>
  <mwl-calendar-week-view
    *ngSwitchCase="CalendarView.Week"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-week-view>
  <mwl-calendar-day-view
    *ngSwitchCase="CalendarView.Day"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-day-view>
</div>



 </td>
 <td>
  <div class="row text-center">
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        mwlCalendarPreviousView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Previous
      </div>
      <div
        class="btn btn-outline-secondary"
        mwlCalendarToday
        [(viewDate)]="viewDate"
      >
        Today
      </div>
      <div
        class="btn btn-primary"
        mwlCalendarNextView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Next
      </div>
    </div>
  </div>
  <div class="col-md-4">
    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>
  </div>
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Month)"
        [class.active]="view === CalendarView.Month"
      >
        Month
      </div>
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Week)"
        [class.active]="view === CalendarView.Week"
      >
        Week
      </div>
    </div>
  </div>
</div> 
<div [ngSwitch]="view" class="calview">
  <mwl-calendar-month-view
    *ngSwitchCase="CalendarView.Month"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    [activeDayIsOpen]="activeDayIsOpen"
    (dayClicked)="dayClicked($event.day)"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-month-view>
  <mwl-calendar-week-view
    *ngSwitchCase="CalendarView.Week"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-week-view>
  <mwl-calendar-day-view
    *ngSwitchCase="CalendarView.Day"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-day-view>
</div>

</td>
</tr>
 <tr><td><div class="headalign"><b>Device Communication </b></div></td>
 <td><div class="headalign"><b>Telemetry Service</b></div></td>
 </tr>
  <tr><td><div class="row text-center">
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        mwlCalendarPreviousView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Previous
      </div>
      <div
        class="btn btn-outline-secondary"
        mwlCalendarToday
        [(viewDate)]="viewDate"
      >
        Today
      </div>
      <div
        class="btn btn-primary"
        mwlCalendarNextView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Next
      </div>
    </div>
  </div>
  <div class="col-md-4">
    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>
  </div>
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Month)"
        [class.active]="view === CalendarView.Month"
      >
        Month
      </div>
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Week)"
        [class.active]="view === CalendarView.Week"
      >
        Week
      </div>
     
    </div>
  </div>
</div>

<div [ngSwitch]="view" class="calview">
  <mwl-calendar-month-view
    *ngSwitchCase="CalendarView.Month"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    [activeDayIsOpen]="activeDayIsOpen"
    (dayClicked)="dayClicked($event.day)"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-month-view>
  <mwl-calendar-week-view
    *ngSwitchCase="CalendarView.Week"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-week-view>
  <mwl-calendar-day-view
    *ngSwitchCase="CalendarView.Day"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-day-view>
</div>



 </td>
 <td>
   <div class="row text-center">
  <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        mwlCalendarPreviousView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Previous
      </div>
      <div
        class="btn btn-outline-secondary"
        mwlCalendarToday
        [(viewDate)]="viewDate"
      >
        Today
      </div>
      <div
        class="btn btn-primary"
        mwlCalendarNextView
        [view]="view"
        [(viewDate)]="viewDate"
        (viewDateChange)="closeOpenMonthViewDay()"
      >
        Next
      </div>
    </div>
   
     
  </div>
 
  <div class="col-md-4">
     <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>
  </div>
   <div class="col-md-4">
    <div class="btn-group">
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Month)"
        [class.active]="view === CalendarView.Month"
      >
        Month
      </div>
      <div
        class="btn btn-primary"
        (click)="setView(CalendarView.Week)"
        [class.active]="view === CalendarView.Week"
      >
        Week
      </div>
    
    </div>
  </div> 
 </div> 
<div [ngSwitch]="view" class="calview">
  <mwl-calendar-month-view
    *ngSwitchCase="CalendarView.Month"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    [activeDayIsOpen]="activeDayIsOpen"
    (dayClicked)="dayClicked($event.day)"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-month-view>
  <mwl-calendar-week-view
    *ngSwitchCase="CalendarView.Week"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-week-view>
  <mwl-calendar-day-view
    *ngSwitchCase="CalendarView.Day"
    [viewDate]="viewDate"
    [events]="events"
    [refresh]="refresh"
    (eventClicked)="handleEvent('Clicked', $event.event)"
    (eventTimesChanged)="eventTimesChanged($event)"
  >
  </mwl-calendar-day-view>
</div>

</td>
</tr>
</table>


------------------------------
style.css
--------------------
h3 {
  margin: 0 0 10px;
}
h2{
  padding: 25px;
}
b{
  text-align:center;
}

pre {
  background-color: #f5f5f5;
  padding: 15px;
}
.calview{
    width: 45%;
    height: 25% !important;
    margin-left: 45px;
}
.headalign{
  margin-left: 4%;
}
-------------------------------------
component.ts
-----------------------------
import {
  Component,
  ChangeDetectionStrategy,
  ViewChild,
  TemplateRef
} from '@angular/core';
import {
  startOfDay,
  endOfDay,
  subDays,
  addDays,
  endOfMonth,
  isSameDay,
  isSameMonth,
  addHours
} from 'date-fns';
import { Subject } from 'rxjs';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import {
  CalendarEvent,
  CalendarEventAction,
  CalendarEventTimesChangedEvent,
  CalendarView
} from 'angular-calendar';

const colors: any = {
  red: {
    primary: '#ad2121',
    secondary: '#FAE3E3'
  },
  blue: {
    primary: '#1e90ff',
    secondary: '#D1E8FF'
  },
  yellow: {
    primary: '#e3bc08',
    secondary: '#FDF1BA'
  }
};

@Component({
  selector: 'mwl-demo-component',
  changeDetection: ChangeDetectionStrategy.OnPush,
  styleUrls: ['styles.css'],
  templateUrl: 'template.html'
})
export class DemoComponent {
  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;

  view: CalendarView = CalendarView.Month;

  CalendarView = CalendarView;

  viewDate: Date = new Date();

  modalData: {
    action: string;
    event: CalendarEvent;
  };

  actions: CalendarEventAction[] = [
    {
      label: '<i class="fa fa-fw fa-pencil"></i>',
      onClick: ({ event }: { event: CalendarEvent }): void => {
        this.handleEvent('Edited', event);
      }
    },
    {
      label: '<i class="fa fa-fw fa-times"></i>',
      onClick: ({ event }: { event: CalendarEvent }): void => {
       // this.events = this.events.filter(iEvent => iEvent !== event);
       // this.handleEvent('Deleted', event);
      }
    }
  ];

  refresh: Subject<any> = new Subject();

  events: CalendarEvent[] = [

  ];

  activeDayIsOpen: boolean = false;

  constructor(private modal: NgbModal) {}

  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {
    if (isSameMonth(date, this.viewDate)) {
      if (
        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||
        events.length === 0
      ) {
        this.activeDayIsOpen = false;
      } else {
        this.activeDayIsOpen = true;
      }
      this.viewDate = date;
    }
  }

  eventTimesChanged({
    event,
    newStart,
    newEnd
  }: CalendarEventTimesChangedEvent): void {
    this.events = this.events.map(iEvent => {
      if (iEvent === event) {
        return {
          ...event,
          start: newStart,
          end: newEnd
        };
      }
      return iEvent;
    });
    this.handleEvent('Dropped or resized', event);
  }

  handleEvent(action: string, event: CalendarEvent): void {
    this.modalData = { event, action };
    this.modal.open(this.modalContent, { size: 'lg' });
  }

  addEvent(): void {
    this.events = [
      ...this.events,
      {
        title: 'New event',
        start: startOfDay(new Date()),
        end: endOfDay(new Date()),
        color: colors.red,
        draggable: true,
        resizable: {
          beforeStart: true,
          afterEnd: true
        }
      }
    ];
  }

  deleteEvent(eventToDelete: CalendarEvent) {
    this.events = this.events.filter(event => event !== eventToDelete);
  }

  setView(view: CalendarView) {
    this.view = view;
  }

  closeOpenMonthViewDay() {
    this.activeDayIsOpen = false;
  }
}
----------------------------------------
calendar-header.component.ts
----------------------------
import { Component, Input, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'mwl-demo-utils-calendar-header',
  template: `
    <div class="row text-center">
      <div class="col-md-4">
        <div class="btn-group">
          <div
            class="btn btn-primary"
            mwlCalendarPreviousView
            [view]="view"
            [(viewDate)]="viewDate"
            (viewDateChange)="viewDateChange.next(viewDate)"
          >
            Previous
          </div>
          <div
            class="btn btn-outline-secondary"
            mwlCalendarToday
            [(viewDate)]="viewDate"
            (viewDateChange)="viewDateChange.next(viewDate)"
          >
            Today
          </div>
          <div
            class="btn btn-primary"
            mwlCalendarNextView
            [view]="view"
            [(viewDate)]="viewDate"
            (viewDateChange)="viewDateChange.next(viewDate)"
          >
            Next
          </div>
        </div>
      </div>
      <div class="col-md-4">
        <h3>{{ viewDate | calendarDate: view + 'ViewTitle':locale }}</h3>
      </div>
      <div class="col-md-4">
        <div class="btn-group">
          <div
            class="btn btn-primary"
            (click)="viewChange.emit('month')"
            [class.active]="view === 'month'"
          >
            Month
          </div>
          <div
            class="btn btn-primary"
            (click)="viewChange.emit('week')"
            [class.active]="view === 'week'"
          >
            Week
          </div>
        </div>
      </div>
    </div>
    <br />
  `
})
export class CalendarHeaderComponent {
  @Input() view: string;

  @Input() viewDate: Date;

  @Input() locale: string = 'en';

  @Output() viewChange: EventEmitter<string> = new EventEmitter();

  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();
}
---------------------------------------------
index.html
-----------------------
<link href="https://unpkg.com/bootstrap-css-only@4.3.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://unpkg.com/font-awesome@4.7.0/css/font-awesome.css" rel="stylesheet">
<!-- <link href="https://unpkg.com/angular-calendar@0.27.20/css/angular-calendar.css" rel="stylesheet"> -->
<style>
.cal-month-view .cal-header {
  text-align: center;
  font-weight: bolder; }

.cal-month-view .cal-header .cal-cell {
  padding: 5px 0;
  overflow: hidden;
  -o-text-overflow: ellipsis;
     text-overflow: ellipsis;
  display: block;
  white-space: nowrap; }

.cal-month-view .cal-days {
  border: 1px solid;
  border-bottom: 0; }

.cal-month-view .cal-cell-top {
  min-height: 70px;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.cal-month-view .cal-cell-row {
  display: -webkit-box;
  display: -ms-flexbox;
  -js-display: flex;
  display: flex; }

.cal-month-view .cal-cell {
  float: left;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  -js-display: flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

.cal-month-view .cal-day-cell {
  min-height: 50px; }
  @media all and (-ms-high-contrast: none) {
    .cal-month-view .cal-day-cell {
      display: block; } }

.cal-month-view .cal-day-cell:not(:last-child) {
  border-right: 1px solid; }

.cal-month-view .cal-days .cal-cell-row {
  border-bottom: 1px solid; }

.cal-month-view .cal-day-badge {
  margin-top: 18px;
  margin-left: 10px;
  display: inline-block;
  min-width: 10px;
  padding: 3px 7px;
  font-size: 12px;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  border-radius: 10px; }

.cal-month-view .cal-day-number {
  font-size: 1.2em;
  font-weight: 400;
  opacity: 0.5;
  margin-top: 15px;
  margin-right: 15px;
  float: right;
  margin-bottom: 10px; }

.cal-month-view .cal-events {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  margin: 3px;
  line-height: 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  -js-display: flex;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.cal-month-view .cal-event {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  display: inline-block;
  margin: 2px; }

.cal-month-view .cal-day-cell.cal-in-month.cal-has-events {
  cursor: pointer; }

.cal-month-view .cal-day-cell.cal-out-month .cal-day-number {
  opacity: 0.1;
  cursor: default; }

.cal-month-view .cal-day-cell.cal-today .cal-day-number {
  font-size: 1.9em; }

.cal-month-view .cal-open-day-events {
  padding: 15px; }

.cal-month-view .cal-open-day-events .cal-event {
  position: relative;
  top: 2px; }

.cal-month-view .cal-out-month .cal-day-badge,
.cal-month-view .cal-out-month .cal-event {
  opacity: 0.3; }

.cal-month-view .cal-draggable {
  cursor: move; }

.cal-month-view .cal-drag-active * {
  pointer-events: none; }

.cal-month-view .cal-event-title {
  cursor: pointer; }
  .cal-month-view .cal-event-title:hover {
    text-decoration: underline; }

.cal-month-view {
  background-color: #fff; }
  .cal-month-view .cal-cell-row:hover {
    background-color: #fafafa; }
  .cal-month-view .cal-cell-row .cal-cell:hover,
  .cal-month-view .cal-cell.cal-has-events.cal-open {
    background-color: #ededed; }
  .cal-month-view .cal-days {
    border-color: #e1e1e1; }
  .cal-month-view .cal-day-cell:not(:last-child) {
    border-right-color: #e1e1e1; }
  .cal-month-view .cal-days .cal-cell-row {
    border-bottom-color: #e1e1e1; }
  .cal-month-view .cal-day-badge {
    background-color: #b94a48;
    color: #fff; }
  .cal-month-view .cal-event {
    background-color: #1e90ff;
    border-color: #d1e8ff;
    color: #fff; }
  .cal-month-view .cal-day-cell.cal-weekend .cal-day-number {
    color: #8b0000; }
  .cal-month-view .cal-day-cell.cal-today {
    background-color: #e8fde7; }
  .cal-month-view .cal-day-cell.cal-drag-over {
    background-color: #e0e0e0 !important; }
  .cal-month-view .cal-open-day-events {
    color: #fff;
    background-color: #555;
    -webkit-box-shadow: inset 0 0 15px 0 rgba(0, 0, 0, 0.5);
            box-shadow: inset 0 0 15px 0 rgba(0, 0, 0, 0.5); }

.cal-week-view {
  /* stylelint-disable-next-line selector-type-no-unknown */ }
  .cal-week-view * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .cal-week-view .cal-day-headers {
    display: -webkit-box;
    display: -ms-flexbox;
    -js-display: flex;
    display: flex;
    padding-left: 70px;
    border: 1px solid; }
  .cal-week-view .cal-day-headers .cal-header {
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    text-align: center;
    padding: 5px; }
    .cal-week-view .cal-day-headers .cal-header:not(:last-child) {
      border-right: 1px solid; }
    .cal-week-view .cal-day-headers .cal-header:first-child {
      border-left: 1px solid; }
  .cal-week-view .cal-day-headers span {
    font-weight: 400;
    opacity: 0.5; }
  .cal-week-view .cal-day-column {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    border-left: solid 1px; }
  .cal-week-view .cal-event {
    font-size: 12px;
    border: 1px solid; }
  .cal-week-view .cal-time-label-column {
    width: 70px;
    height: 100%; }
  .cal-week-view .cal-all-day-events {
    border: solid 1px;
    border-top: 0;
    border-bottom-width: 3px;
    padding-top: 3px;
    position: relative; }
    .cal-week-view .cal-all-day-events .cal-day-columns {
      height: 100%;
      width: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      -js-display: flex;
      display: flex;
      position: absolute;
      top: 0;
      z-index: 0; }
    .cal-week-view .cal-all-day-events .cal-events-row {
      position: relative;
      height: 31px;
      margin-left: 70px; }
    .cal-week-view .cal-all-day-events .cal-event-container {
      display: inline-block;
      position: absolute; }
      .cal-week-view .cal-all-day-events .cal-event-container.resize-active {
        z-index: 1;
        pointer-events: none; }
    .cal-week-view .cal-all-day-events .cal-event {
      padding: 0 5px;
      margin-left: 2px;
      margin-right: 2px;
      height: 28px;
      line-height: 28px; }
    .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event {
      border-top-left-radius: 5px;
      border-bottom-left-radius: 5px; }
    .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event {
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px; }
    .cal-week-view .cal-all-day-events .cal-time-label-column {
      display: -webkit-box;
      display: -ms-flexbox;
      -js-display: flex;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      font-size: 14px; }
    .cal-week-view .cal-all-day-events .cal-resize-handle {
      width: 6px;
      height: 100%;
      cursor: col-resize;
      position: absolute;
      top: 0; }
      .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end {
        right: 0; }
  .cal-week-view .cal-event,
  .cal-week-view .cal-header {
    overflow: hidden;
    -o-text-overflow: ellipsis;
       text-overflow: ellipsis;
    white-space: nowrap; }
  .cal-week-view .cal-drag-active {
    pointer-events: none;
    z-index: 1; }
    .cal-week-view .cal-drag-active * {
      pointer-events: none; }
  .cal-week-view .cal-time-events {
    position: relative;
    border: solid 1px;
    border-top: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    -js-display: flex;
    display: flex; }
    .cal-week-view .cal-time-events .cal-day-columns {
      display: -webkit-box;
      display: -ms-flexbox;
      -js-display: flex;
      display: flex;
      -webkit-box-flex: 1;
          -ms-flex-positive: 1;
              flex-grow: 1; }
    .cal-week-view .cal-time-events .cal-day-column {
      position: relative; }
    .cal-week-view .cal-time-events .cal-event-container {
      position: absolute;
      z-index: 1; }
    .cal-week-view .cal-time-events .cal-event {
      width: calc(100% - 2px);
      height: calc(100% - 2px);
      margin: 1px;
      padding: 0 5px;
      line-height: 25px; }
    .cal-week-view .cal-time-events .cal-resize-handle {
      width: 100%;
      height: 4px;
      cursor: row-resize;
      position: absolute; }
      .cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end {
        bottom: 0; }
  .cal-week-view .cal-hour-segment {
    position: relative; }
    .cal-week-view .cal-hour-segment::after {
      content: '\00a0'; }
  .cal-week-view .cal-event-container:not(.cal-draggable) {
    cursor: pointer; }
  .cal-week-view .cal-draggable {
    cursor: move; }
  .cal-week-view mwl-calendar-week-view-hour-segment,
  .cal-week-view .cal-hour-segment {
    display: block; }
  .cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,
  .cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment {
    border-bottom: thin dashed; }
  .cal-week-view .cal-time {
    font-weight: bold;
    padding-top: 5px;
    width: 70px;
    text-align: center; }
  .cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time {
    display: none; }
  .cal-week-view .cal-starts-within-day .cal-event {
    border-top-left-radius: 5px;
    border-top-right-radius: 5px; }
  .cal-week-view .cal-ends-within-day .cal-event {
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px; }

.cal-week-view {
  background-color: #fff; }
  .cal-week-view .cal-day-headers {
    border-color: #e1e1e1; }
  .cal-week-view .cal-day-headers .cal-header:not(:last-child) {
    border-right-color: #e1e1e1; }
  .cal-week-view .cal-day-headers .cal-header:first-child {
    border-left-color: #e1e1e1; }
  .cal-week-view .cal-day-headers .cal-header:hover,
  .cal-week-view .cal-day-headers .cal-drag-over {
    background-color: #ededed; }
  .cal-week-view .cal-day-column {
    border-left-color: #e1e1e1; }
  .cal-week-view .cal-event {
    background-color: #d1e8ff;
    border-color: #1e90ff;
    color: #1e90ff; }
  .cal-week-view .cal-all-day-events {
    border-color: #e1e1e1; }
  .cal-week-view .cal-header.cal-today {
    background-color: #e8fde7; }
  .cal-week-view .cal-header.cal-weekend span {
    color: #8b0000; }
  .cal-week-view .cal-time-events {
    border-color: #e1e1e1; }
    .cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover {
      background-color: #ededed; }
  .cal-week-view .cal-hour-odd {
    background-color: #fafafa; }
  .cal-week-view .cal-drag-over .cal-hour-segment {
    background-color: #ededed; }
  .cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,
  .cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment {
    border-bottom-color: #e1e1e1; }

.cal-day-view {
  /* stylelint-disable-next-line selector-type-no-unknown */ }
  .cal-day-view * {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .cal-day-view .cal-hour-rows {
    width: 100%;
    border: solid 1px;
    overflow-x: auto;
    position: relative; }
  .cal-day-view mwl-calendar-day-view-hour-segment,
  .cal-day-view .cal-hour-segment {
    display: block; }
  .cal-day-view .cal-hour-segment::after {
    content: '\00a0'; }
  .cal-day-view .cal-hour:not(:last-child) .cal-hour-segment,
  .cal-day-view .cal-hour:last-child :not(:last-child) .cal-hour-segment {
    border-bottom: thin dashed; }
  .cal-day-view .cal-time {
    font-weight: bold;
    width: 70px;
    height: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    -js-display: flex;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .cal-day-view .cal-hour-segment.cal-after-hour-start .cal-time {
    display: none; }
  .cal-day-view .cal-drag-active .cal-hour-segment {
    pointer-events: none; }
  .cal-day-view .cal-event-container {
    position: absolute;
    cursor: pointer; }
    .cal-day-view .cal-event-container.resize-active {
      z-index: 1;
      pointer-events: none; }
  .cal-day-view .cal-event {
    padding: 5px;
    font-size: 12px;
    border: 1px solid;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    overflow: hidden;
    -o-text-overflow: ellipsis;
       text-overflow: ellipsis;
    white-space: nowrap;
    height: 100%; }
  .cal-day-view .cal-all-day-events > * {
    cursor: pointer; }
  .cal-day-view .cal-draggable {
    cursor: move; }
  .cal-day-view .cal-starts-within-day .cal-event {
    border-top-left-radius: 5px;
    border-top-right-radius: 5px; }
  .cal-day-view .cal-ends-within-day .cal-event {
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px; }
  .cal-day-view .cal-drag-active {
    z-index: 1; }
    .cal-day-view .cal-drag-active * {
      pointer-events: none; }
  .cal-day-view .cal-resize-handle {
    width: 100%;
    height: 4px;
    cursor: row-resize;
    position: absolute; }
    .cal-day-view .cal-resize-handle.cal-resize-handle-after-end {
      bottom: 0; }

.cal-day-view {
  background-color: #fff; }
  .cal-day-view .cal-hour-rows {
    border-color: #e1e1e1; }
  .cal-day-view .cal-hour:nth-child(odd) {
    background-color: #fafafa; }
  .cal-day-view .cal-hour:not(:last-child) .cal-hour-segment,
  .cal-day-view .cal-hour:last-child :not(:last-child) .cal-hour-segment {
    border-bottom-color: #e1e1e1; }
  .cal-day-view .cal-hour-segment:hover,
  .cal-day-view .cal-drag-over .cal-hour-segment {
    background-color: #ededed; }
  .cal-day-view .cal-event {
    background-color: #d1e8ff;
    border-color: #1e90ff;
    color: #1e90ff; }

.cal-tooltip {
  position: absolute;
  z-index: 1070;
  display: block;
  font-style: normal;
  font-weight: normal;
  letter-spacing: normal;
  line-break: auto;
  line-height: 1.5;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
  font-size: 11px;
  word-wrap: break-word;
  opacity: 0.9; }

.cal-tooltip.cal-tooltip-top {
  padding: 5px 0;
  margin-top: -3px; }

.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow {
  bottom: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 5px 5px 0; }

.cal-tooltip.cal-tooltip-right {
  padding: 0 5px;
  margin-left: 3px; }

.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow {
  top: 50%;
  left: 0;
  margin-top: -5px;
  border-width: 5px 5px 5px 0; }

.cal-tooltip.cal-tooltip-bottom {
  padding: 5px 0;
  margin-top: 3px; }

.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow {
  top: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 0 5px 5px; }

.cal-tooltip.cal-tooltip-left {
  padding: 0 5px;
  margin-left: -3px; }

.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow {
  top: 50%;
  right: 0;
  margin-top: -5px;
  border-width: 5px 0 5px 5px; }

.cal-tooltip-inner {
  max-width: 200px;
  padding: 3px 8px;
  text-align: center;
  border-radius: 0.25rem; }

.cal-tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid; }

.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow {
  border-top-color: #000; }

.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow {
  border-right-color: #000; }

.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow {
  border-bottom-color: #000; }

.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow {
  border-left-color: #000; }

.cal-tooltip-inner {
  color: #fff;
  background-color: #000; }



</style>
<link href="https://unpkg.com/flatpickr@4.6.2/dist/flatpickr.css" rel="stylesheet">
<mwl-demo-component>Loading...</mwl-demo-component>